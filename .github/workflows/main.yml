name: CI Pipeline

on:
  push:
    branches:
      - "**"
  pull_request_target:
    branches:
      - "**"

permissions:
  checks: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Action Lint
        uses: panda0603/lint-action@1.6.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  jest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run Jest tests
        run: npm run test

  # coverage:
  #   runs-on: ubuntu-latest
  #   needs: jest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ArtiomTr/jest-coverage-report-action@v2
  #       with:
  #         github-token: ${{ secrets.SECRET_TOKEN }}
  #         working-directory: dist

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build Project
        run: npm run build
        if: success() && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm install

      - name: Deploy to Vercel
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
